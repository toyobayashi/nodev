name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Windows build
      if: ${{ matrix.os == 'windows-latest' }}
      shell: cmd
      env:
        VCVARS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat
        VCVER: 16
      run: |
        .\scripts\buildzlib.bat
        .\scripts\buildcurl.bat
        .\build.bat win32 Release static
    
    - name: Linux build
      if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      env:
        PLATFORM_NAME: linux
      run: |
        chmod +x ./build.sh ./scripts/buildzlib.sh
        ./scripts/buildzlib.sh
        ./build.sh
        
    - name: macOS build
      if: ${{ matrix.os == 'macos-latest' }}
      shell: bash
      env:
        PLATFORM_NAME: darwin
      run: |
        chmod +x ./build.sh ./scripts/buildzlib.sh ./scripts/buildcurl.sh
        ./scripts/buildzlib.sh
        ./scripts/buildcurl.sh
        ./build.sh
  draft:
    name: Draft
    needs: build
    if: ${{ github.event.create.ref_type == 'tag' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Windows upload
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/win/Win32/bin/nodev.exe
          asset_name: nodev.exe
          asset_content_type: application/octet-stream
      - name: Linux upload
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/linux/bin/nodev-linux
          asset_name: nodev-linux
          asset_content_type: application/octet-stream
      - name: macOS upload
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/darwin/bin/nodev-darwin
          asset_name: nodev-darwin
          asset_content_type: application/octet-stream
